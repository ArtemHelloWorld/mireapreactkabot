import aiohttp
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
import os
from dotenv import load_dotenv
from utils import get_user_info, get_weather
import logging

logger = logging.getLogger(__name__)

load_dotenv()
token_weather = os.getenv('TOKEN_WEATHER')

async def say_hi(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_info = get_user_info(update)
    text = update.message.text
    logger.info(f'–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: `{text}` –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_info}')

    if text == '–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∞–≤–∞—Ç–∞—Ä':
        try:
            await context.bot.send_photo(
                chat_id=user_info['chat_id'],
                photo=user_info['ava_url_cat']
            )
            logger.info(f'–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_info['user_id']}')
        except Exception as e:
            logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–≤–∞—Ç–∞—Ä–∞: {e}')
            await context.bot.send_message(
                chat_id=user_info['chat_id'],
                text='–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–≤–∞—Ç–∞—Ä–∞ üòø'
            )
    elif text == '–ú–æ–π ID':
        await context.bot.send_message(
            chat_id=user_info['chat_id'],
            text=f'–í–∞—à Telegram user ID: {user_info['user_id']}'
        )
        logger.info('ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')

    elif text == '–ü–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è':
        logger.info('–ó–∞–ø—Ä–æ—à–µ–Ω–∞ –ø–æ–≥–æ–¥–∞.')
        await request_location(update, context)
    elif text == '–§–æ—Ç–æ –∫–æ—Ç–∏–∫–∞':
        logger.info('–ó–∞–ø—Ä–æ—à–µ–Ω–æ —Ñ–æ—Ç–æ –∫–æ—Ç–∏–∫–∞.')
        await send_cat_photo(update, context)
    elif text.lower().startswith('—Ä–∞–Ω–¥–æ–º') or text.lower().startswith('—Å–ª—É—á'):
        logger.info('–ó–∞–ø—Ä–æ—à–µ–Ω–æ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ.')
        await send_random_digit(update, context, user_info)
    else:
        await context.bot.send_message(
            chat_id=user_info['chat_id'],
            text=f'{user_info['first_name']}, –∫–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞?\n'
                 f'–¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:\n'
                 f'ID: {user_info['user_id']}\n'
                 f'–Æ–∑–µ—Ä–Ω–µ–π–º: @{user_info['username']}'
        )
        logger.warning(f'–ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {text}')

async def wake_up(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_info = get_user_info(update)
    button = ReplyKeyboardMarkup([
        ['–§–æ—Ç–æ –∫–æ—Ç–∏–∫–∞', '–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∞–≤–∞—Ç–∞—Ä'],
        ['–ú–æ–π ID', '–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ'],
        ['–ü–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è']
    ], resize_keyboard=True)
    await context.bot.send_message(
        chat_id=user_info['chat_id'],
        text=f'–ü—Ä–∏–≤–µ—Ç {user_info['username']}, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è!',
        reply_markup=button
    )
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info['username']} –ø–æ–ª—É—á–∏–ª –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é')

async def my_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_info = get_user_info(update)
    await context.bot.send_message(
        chat_id=user_info['chat_id'],
        text=f'–í–∞—à Telegram user ID: {user_info['user_id']}'
    )
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info['user_id']} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–≤–æ–π ID')

async def request_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_info = get_user_info(update)
    location_keyboard = ReplyKeyboardMarkup(
        [[KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã üìç', request_location=True)]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await context.bot.send_message(
        chat_id=user_info['chat_id'],
        text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π:',
        reply_markup=location_keyboard
    )
    logger.info('–ó–∞–ø—Ä–æ—Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

async def handle_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    location = update.message.location
    if location is None:
        await update.message.reply_text('–õ–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.')
        logger.warning('–ù–µ –ø–æ–ª—É—á–µ–Ω–∞ –ª–æ–∫–∞—Ü–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        return
    latitude = location.latitude
    longitude = location.longitude
    context.user_data['location'] = (latitude, longitude)
    try:
        weather_report = await get_weather(latitude, longitude)
        logger.info(f'–ü–æ–≥–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: {latitude}, {longitude}')
    except Exception as e:
        weather_report = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.'
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã: {e}')
    await update.message.reply_text(weather_report)
    main_menu = ReplyKeyboardMarkup(
        [
            ['–§–æ—Ç–æ –∫–æ—Ç–∏–∫–∞', '–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∞–≤–∞—Ç–∞—Ä'],
            ['–ú–æ–π ID', '–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ'],
            ['–ü–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è']
        ],
        resize_keyboard=True
    )
    await update.message.reply_text('üôÇ', reply_markup=main_menu)

async def send_cat_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    breed_id = 'beng'
    url = f'https://api.thecatapi.com/v1/images/search?breed_ids={breed_id}'
    logger.info('–ó–∞–ø—Ä–æ—Å —Ñ–æ—Ç–æ –∫–æ—Ç–∏–∫–∞')
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as resp:
                if resp.status == 200:
                    data = await resp.json()
                    if data and 'url' in data[0]:
                        cat_url = data[0]['url']
                    elif data:
                        cat_url = data[0].get('url')
                    else:
                        cat_url = None
                else:
                    cat_url = None
    except Exception as e:
        cat_url = None
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ—Ç–∏–∫–∞: {e}')

    if cat_url:
        await context.bot.send_photo(
            chat_id=chat_id,
            photo=cat_url,
            caption='–í–æ—Ç –∫–æ—Ç–∏–∫ –±–µ–Ω–≥–∞–ª—å—Å–∫–æ–π –ø–æ—Ä–æ–¥—ãüò∫:'
        )
        logger.info('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ –∫–æ—Ç–∏–∫–∞')
    else:
        await context.bot.send_message(chat_id=chat_id, text='–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ –∫–æ—Ç–∏–∫–∞ –Ω—É–∂–Ω–æ–π –ø–æ—Ä–æ–¥—ã üòø')
        logger.warning('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∫–æ—Ç–∏–∫–∞')

async def send_random_digit(update: Update, context: ContextTypes.DEFAULT_TYPE, user_info):
    url = 'https://www.randomnumberapi.com/api/v1.0/random?min=1&max=100&count=1'
    logger.info('–ó–∞–ø—Ä–æ—Å —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ API')
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as resp:
                if resp.status == 200:
                    data = await resp.json()
                    if isinstance(data, list) and data:
                        rand_num = data[0]
                        text = f'–í–∞—à–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ: {rand_num}'
                        logger.info(f'–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–∏—Å–ª–æ: {rand_num}')
                    else:
                        text = '–û—à–∏–±–∫–∞: API –Ω–µ –≤–µ—Ä–Ω—É–ª —á–∏—Å–ª–æ!'
                        logger.warning('API –Ω–µ –≤–µ—Ä–Ω—É–ª —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ')
                else:
                    text = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞!'
                    logger.error(f'–û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ randomnumberapi: —Å—Ç–∞—Ç—É—Å {resp.status}')
    except Exception as e:
        text = '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–∏—Å–æ–º —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª!'
        logger.error(f'–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å randomnumberapi: {e}')
    await context.bot.send_message(chat_id=user_info['chat_id'], text=text)
